import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import SuperGif from '../../components/SuperGif'
import { useEffect } from 'react'
import $ from 'jquery'

const inter = Inter({ subsets: ['latin'] })

const url = '../../youmustchange.gif'

export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <BackgroundAnimatedGif src={url}>
        </BackgroundAnimatedGif>
      </main>
    </>
  )
}

const BackgroundAnimatedGif = function(props: { src: string, children: any }) {
  const url = props.src
  useEffect(() => {
    const img: HTMLImageElement = $('#ratio')[0] as HTMLImageElement
    const test = new SuperGif({ options: { gif: img } })
    test.load(function () {
      console.log('oh hey, now the gif is loaded');
      test.pause()
      const maxFrame = test.get_length()
      let previous = 0
      $(window).scroll(function (scroll) {
        var scrollTop = window.pageYOffset || document.body.scrollTop;
        let dx = scrollTop - previous
        previous = scrollTop
        let percent = 1 - (window.scrollMaxY - window.scrollY) / window.scrollMaxY
        let frameIndex = Math.floor(percent * maxFrame)
        test.move_to(frameIndex)
        console.log(dx)
      });
      test.get_canvas().width = 1920;
      test.get_canvas().height = 1080;
      test.get_canvas().style.position = 'fixed';
      test.get_canvas().style.zIndex = '-10';
    });
  }, [])
  return (
    <div className="background-animated-gif">
      <img id='ratio' style={{ width: '0', height: '0'}} src={url} alt='animated gif background'></img>
      <div className="background-animated-gif__container">
        <div className="background-animated-gif__container__content">
          {props.children}
        </div>
      </div>
    </div>
  )
}